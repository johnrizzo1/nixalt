# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot = {
    consoleLogLevel = 3; # 3 = Error, 4 = Warning, 5 = Info, 6 = Debug
    initrd = {
      verbose = false; # For silent boot
      availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
      kernelModules = [ ];
    };

    kernelModules = [ "kvm-intel" ];
    kernelParams = [
      "quiet"
      "splash"
      "boot.shell_on_fail"
      "udev.log_priority=3"
      "rd.systemd.show_status=auto"
    ];

    extraModulePackages = [ ];

    plymouth = {
      enable = true;
      theme = "rings";
      themePackages = with pkgs; [
        # By default we would install all themes
        (adi1090x-plymouth-themes.override {
          selected_themes = [ 
            "rings"
            "connect"
          ];
        })
      ];
    };

    loader = {
        # Use the systemd-boot EFI boot loader.
        systemd-boot.enable = true;
        efi.canTouchEfiVariables = true;
        # VMware, Parallels both only support this being 0 otherwise you see
        # "error switching console mode" on boot.
        systemd-boot.consoleMode = "0";
        # Hide the os choice for bootloader unless a key is pressed.
        timeout = 0;
    };
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/1b2e4662-27e2-41dc-9420-f2f8d7e52b6d";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/4DDD-A4F0";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/8539f8a8-3ecb-431d-ba2b-c8cbe1b5788f"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
